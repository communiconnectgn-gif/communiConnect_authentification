const axios = require('axios');

async function testLocationSelector() {
  try {
    console.log('üß™ Test du s√©lecteur de localisation...');
    
    // Tester l'acc√®s au fichier de donn√©es g√©ographiques
    const response = await axios.get('http://localhost:3000/data/guinea-geography-complete.json');
    
    if (response.status === 200) {
      console.log('‚úÖ Fichier de donn√©es g√©ographiques accessible');
      
      const data = response.data;
      const regions = data.Guin√©e?.R√©gions || [];
      
      console.log(`üìä ${regions.length} r√©gions trouv√©es:`);
      regions.forEach(region => {
        console.log(`  - ${region.nom}`);
        const prefectures = region.pr√©fectures || [];
        console.log(`    ${prefectures.length} pr√©fectures:`);
        prefectures.forEach(prefecture => {
          console.log(`      - ${prefecture.nom}`);
          const communes = prefecture.communes || [];
          console.log(`        ${communes.length} communes:`);
          communes.forEach(commune => {
            console.log(`          - ${commune.nom}`);
            const quartiers = commune.quartiers || [];
            console.log(`            ${quartiers.length} quartiers:`);
            quartiers.forEach(quartier => {
              console.log(`              - ${quartier.nom}`);
            });
          });
        });
      });
      
      // Tester sp√©cifiquement Lab√©
      const labeRegion = regions.find(r => r.nom === 'Lab√©');
      if (labeRegion) {
        console.log('\nüîç Test sp√©cifique pour Lab√©:');
        const labePrefecture = labeRegion.pr√©fectures?.find(p => p.nom === 'Lab√©');
        if (labePrefecture) {
          const labeCentreCommune = labePrefecture.communes?.find(c => c.nom === 'Lab√©-Centre');
          if (labeCentreCommune) {
            const porelQuartier = labeCentreCommune.quartiers?.find(q => q.nom === 'Porel');
            if (porelQuartier) {
              console.log('‚úÖ Lab√© > Lab√© > Lab√©-Centre > Porel trouv√©');
            } else {
              console.log('‚ùå Quartier Porel non trouv√©');
            }
          } else {
            console.log('‚ùå Commune Lab√©-Centre non trouv√©e');
          }
        } else {
          console.log('‚ùå Pr√©fecture Lab√© non trouv√©e');
        }
      } else {
        console.log('‚ùå R√©gion Lab√© non trouv√©e');
      }
      
    } else {
      console.log('‚ùå Erreur lors de l\'acc√®s au fichier de donn√©es');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testLocationSelector(); 