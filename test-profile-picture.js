const puppeteer = require('puppeteer');

async function testProfilePicture() {
  let browser;
  
  try {
    console.log('üß™ Test du chargement de la photo de profil...');
    
    browser = await puppeteer.launch({
      headless: false,
      defaultViewport: null,
      args: ['--start-maximized']
    });
    
    const page = await browser.newPage();
    
    // Aller √† la page de profil
    console.log('üì± Navigation vers la page de profil...');
    await page.goto('http://localhost:3000/profile', { waitUntil: 'networkidle0' });
    await page.waitForTimeout(3000);
    
    // V√©rifier si l'avatar est affich√©
    console.log('üîç V√©rification de l\'avatar...');
    const avatar = await page.$('img[src*="placeholder"], .MuiAvatar-img');
    
    if (avatar) {
      console.log('‚úÖ Avatar trouv√©');
      
      // V√©rifier si l'image se charge correctement
      const imageLoaded = await page.evaluate(() => {
        const img = document.querySelector('img[src*="placeholder"], .MuiAvatar-img');
        if (img) {
          return img.complete && img.naturalHeight !== 0;
        }
        return false;
      });
      
      if (imageLoaded) {
        console.log('‚úÖ Image de profil charg√©e correctement');
      } else {
        console.log('‚ùå Image de profil ne se charge pas');
      }
    } else {
      console.log('‚ùå Avatar non trouv√©');
    }
    
    // V√©rifier le bouton d'upload
    console.log('üîç V√©rification du bouton d\'upload...');
    const uploadButton = await page.$('button[aria-label*="photo"], .MuiBadge-badge button');
    
    if (uploadButton) {
      console.log('‚úÖ Bouton d\'upload trouv√©');
      
      // Cliquer sur le bouton d'upload
      await uploadButton.click();
      await page.waitForTimeout(1000);
      
      // V√©rifier si l'input file est pr√©sent
      const fileInput = await page.$('input[type="file"]');
      if (fileInput) {
        console.log('‚úÖ Input file trouv√©');
      } else {
        console.log('‚ùå Input file non trouv√©');
      }
    } else {
      console.log('‚ùå Bouton d\'upload non trouv√©');
    }
    
    // Test d'upload d'image
    console.log('üìù Test d\'upload d\'image...');
    
    // Cr√©er un fichier de test
    await page.evaluate(() => {
      const input = document.querySelector('input[type="file"]');
      if (input) {
        // Cr√©er un fichier de test
        const file = new File(['test'], 'test.jpg', { type: 'image/jpeg' });
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(file);
        input.files = dataTransfer.files;
        input.dispatchEvent(new Event('change', { bubbles: true }));
      }
    });
    
    await page.waitForTimeout(2000);
    
    // V√©rifier si un message de succ√®s appara√Æt
    const successMessage = await page.evaluate(() => {
      const alerts = Array.from(document.querySelectorAll('.MuiAlert-root'));
      return alerts.find(alert => 
        alert.textContent.includes('succ√®s') || 
        alert.textContent.includes('mise √† jour')
      );
    });
    
    if (successMessage) {
      console.log('‚úÖ Message de succ√®s affich√©');
    } else {
      console.log('‚ùå Aucun message de succ√®s');
    }
    
    console.log('‚úÖ Test termin√© avec succ√®s');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// Lancer le test
testProfilePicture();