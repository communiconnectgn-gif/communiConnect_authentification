const axios = require('axios');

const API_BASE = 'http://localhost:5000/api';

async function testApplication() {
  console.log('üß™ Test de l\'application CommuniConnect...\n');

  try {
    // Test 1: V√©rifier que le serveur fonctionne
    console.log('1Ô∏è‚É£ Test de sant√© du serveur...');
    const healthResponse = await axios.get(`${API_BASE}/health`);
    console.log('‚úÖ Serveur en ligne:', healthResponse.data.message);

    // Test 2: Test d'authentification
    console.log('\n2Ô∏è‚É£ Test d\'authentification...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      identifier: 'test@example.com',
      password: 'password123'
    });
    console.log('‚úÖ Connexion r√©ussie:', loginResponse.data.message);
    console.log('   Token g√©n√©r√©:', loginResponse.data.token ? 'Oui' : 'Non');

    // Test 3: Test des routes d'amis
    console.log('\n3Ô∏è‚É£ Test des routes d\'amis...');
    const friendsResponse = await axios.get(`${API_BASE}/friends/list`);
    console.log('‚úÖ Route des amis accessible:', friendsResponse.data.success);

    // Test 4: Test des routes d'alertes
    console.log('\n4Ô∏è‚É£ Test des routes d\'alertes...');
    const alertsResponse = await axios.get(`${API_BASE}/alerts`);
    console.log('‚úÖ Route des alertes accessible:', alertsResponse.data.success);

    // Test 5: Test des donn√©es g√©ographiques
    console.log('\n5Ô∏è‚É£ Test des donn√©es g√©ographiques...');
    const geographyResponse = await axios.get(`${API_BASE}/locations/guinea-geography`);
    console.log('‚úÖ Donn√©es g√©ographiques accessibles:', geographyResponse.data.success);

    console.log('\nüéâ Tous les tests sont pass√©s ! L\'application fonctionne correctement.');
    console.log('\nüìã R√©sum√© :');
    console.log('   ‚úÖ Serveur backend op√©rationnel');
    console.log('   ‚úÖ Authentification fonctionnelle');
    console.log('   ‚úÖ Routes d\'amis accessibles');
    console.log('   ‚úÖ Routes d\'alertes accessibles');
    console.log('   ‚úÖ Donn√©es g√©ographiques disponibles');
    console.log('\nüåê Application pr√™te √† √™tre utilis√©e !');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.response?.data || error.message);
    console.log('\nüîß Suggestions de correction :');
    console.log('   - V√©rifier que le serveur backend est d√©marr√©');
    console.log('   - V√©rifier que le port 5000 est disponible');
    console.log('   - V√©rifier les variables d\'environnement');
  }
}

testApplication(); 