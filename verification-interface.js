const axios = require('axios');

async function verifierInterface() {
  console.log('üîç V√âRIFICATION DE L\'INTERFACE UTILISATEUR\n');

  // Test 1: V√©rifier le serveur backend
  console.log('üì° Test du serveur backend...');
  try {
    const backendResponse = await axios.get('http://localhost:5000/api/livestreams', { timeout: 5000 });
    console.log('‚úÖ Serveur backend: OP√âRATIONNEL');
    console.log(`   - Lives disponibles: ${backendResponse.data.data?.length || 0}`);
  } catch (error) {
    console.log('‚ùå Serveur backend: NON D√âMARR√â');
    console.log('   Solution: cd server && npm start');
  }

  // Test 2: V√©rifier le serveur frontend
  console.log('\nüåê Test du serveur frontend...');
  try {
    const frontendResponse = await axios.get('http://localhost:3000', { timeout: 5000 });
    console.log('‚úÖ Serveur frontend: OP√âRATIONNEL');
    console.log('   - Interface accessible sur http://localhost:3000');
  } catch (error) {
    console.log('‚ùå Serveur frontend: NON D√âMARR√â');
    console.log('   Solution: cd client && npm start');
  }

  // Test 3: V√©rifier les donn√©es
  console.log('\nüìä Test des donn√©es...');
  try {
    const livesResponse = await axios.get('http://localhost:5000/api/livestreams');
    const eventsResponse = await axios.get('http://localhost:5000/api/events');
    const messagesResponse = await axios.get('http://localhost:5000/api/messages/conversations');
    const friendsResponse = await axios.get('http://localhost:5000/api/friends/list');

    console.log('‚úÖ Donn√©es disponibles:');
    console.log(`   - Lives: ${livesResponse.data.data?.length || 0}`);
    console.log(`   - √âv√©nements: ${eventsResponse.data.data?.events?.length || 0}`);
    console.log(`   - Conversations: ${messagesResponse.data.conversations?.length || 0}`);
    console.log(`   - Amis: ${friendsResponse.data.friends?.length || 0}`);
  } catch (error) {
    console.log('‚ùå Erreur lors de la r√©cup√©ration des donn√©es');
  }

  // Instructions pour l'utilisateur
  console.log('\nüéØ INSTRUCTIONS POUR VOIR LES DONN√âES:');
  console.log('='.repeat(50));
  console.log('1. Ouvrez votre navigateur');
  console.log('2. Allez sur: http://localhost:3000');
  console.log('3. Si vous ne voyez rien, attendez 30 secondes');
  console.log('4. Rafra√Æchissez la page (F5)');
  console.log('5. V√©rifiez que les deux serveurs sont d√©marr√©s:');
  console.log('   - Terminal 1: cd server && npm start');
  console.log('   - Terminal 2: cd client && npm start');
  
  console.log('\nüì± ALTERNATIVE - Test direct des API:');
  console.log('   - Lives: http://localhost:5000/api/livestreams');
  console.log('   - √âv√©nements: http://localhost:5000/api/events');
  console.log('   - Messages: http://localhost:5000/api/messages/conversations');
  console.log('   - Amis: http://localhost:5000/api/friends/list');

  console.log('\nüîß DIAGNOSTIC RAPIDE:');
  console.log('   - Backend: http://localhost:5000/api/health');
  console.log('   - Frontend: http://localhost:3000');
}

verifierInterface(); 