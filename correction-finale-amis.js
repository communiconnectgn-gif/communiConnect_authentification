const fs = require('fs');

console.log('üîß CORRECTION FINALE - FONCTIONNALIT√â "MES AMIS"');
console.log('==================================================');

// V√©rification et correction de LazyLoader.js
console.log('\nüîç V√©rification de LazyLoader.js...');
const lazyLoaderPath = 'client/src/components/common/LazyLoader.js';

if (fs.existsSync(lazyLoaderPath)) {
  const content = fs.readFileSync(lazyLoaderPath, 'utf8');
  
  // V√©rifier si LazyFriendsPage est export√©
  if (!content.includes('export const LazyFriendsPage')) {
    console.log('‚ùå Export LazyFriendsPage manquant');
    
    // Ajouter l'export si manquant
    const newContent = content + '\nexport const LazyFriendsPage = createLazyComponent(\n  () => import(\'../../pages/Friends/FriendsPage\'),\n  "Chargement des amis..."\n);';
    
    fs.writeFileSync(lazyLoaderPath, newContent);
    console.log('‚úÖ Export LazyFriendsPage ajout√©');
  } else {
    console.log('‚úÖ Export LazyFriendsPage d√©j√† pr√©sent');
  }
} else {
  console.log('‚ùå LazyLoader.js non trouv√©');
}

// V√©rification et correction de FriendsPage.js
console.log('\nüîç V√©rification de FriendsPage.js...');
const friendsPagePath = 'client/src/pages/Friends/FriendsPage.js';

if (fs.existsSync(friendsPagePath)) {
  const content = fs.readFileSync(friendsPagePath, 'utf8');
  
  // V√©rifier si le composant est correctement d√©fini
  if (!content.includes('const FriendsPage = () =>') && !content.includes('function FriendsPage')) {
    console.log('‚ùå D√©finition du composant FriendsPage manquante');
    
    // Cr√©er un composant FriendsPage basique si manquant
    const basicComponent = `import React from 'react';
import { Box, Typography, Paper } from '@mui/material';

const FriendsPage = () => {
  return (
    <Box sx={{ p: 3 }}>
      <Typography variant="h4" gutterBottom>
        Mes Amis
      </Typography>
      <Paper sx={{ p: 2 }}>
        <Typography variant="body1">
          Page des amis en cours de d√©veloppement...
        </Typography>
      </Paper>
    </Box>
  );
};

export default FriendsPage;`;
    
    fs.writeFileSync(friendsPagePath, basicComponent);
    console.log('‚úÖ Composant FriendsPage cr√©√©');
  } else {
    console.log('‚úÖ Composant FriendsPage d√©j√† d√©fini');
  }
} else {
  console.log('‚ùå FriendsPage.js non trouv√©');
}

// V√©rification et correction de App.js
console.log('\nüîç V√©rification de App.js...');
const appPath = 'client/src/App.js';

if (fs.existsSync(appPath)) {
  const content = fs.readFileSync(appPath, 'utf8');
  
  // V√©rifier si LazyFriendsPage est import√©
  if (!content.includes('import LazyFriendsPage')) {
    console.log('‚ùå Import LazyFriendsPage manquant');
    
    // Ajouter l'import
    const importLine = 'import LazyFriendsPage from \'./components/common/LazyLoader\';';
    const newContent = content.replace(
      'import React, { useEffect } from \'react\';',
      `import React, { useEffect } from 'react';\nimport LazyFriendsPage from './components/common/LazyLoader';`
    );
    
    fs.writeFileSync(appPath, newContent);
    console.log('‚úÖ Import LazyFriendsPage ajout√©');
  } else {
    console.log('‚úÖ Import LazyFriendsPage d√©j√† pr√©sent');
  }
  
  // V√©rifier si la route /friends est d√©finie
  if (!content.includes('path="friends"')) {
    console.log('‚ùå Route /friends manquante');
    
    // Ajouter la route
    const routeLine = '<Route path="friends" element={<LazyFriendsPage />} />';
    const newContent = content.replace(
      '<Route path="profile" element={<LazyProfilePage />} />',
      `<Route path="profile" element={<LazyProfilePage />} />\n            <Route path="friends" element={<LazyFriendsPage />} />`
    );
    
    fs.writeFileSync(appPath, newContent);
    console.log('‚úÖ Route /friends ajout√©e');
  } else {
    console.log('‚úÖ Route /friends d√©j√† d√©finie');
  }
} else {
  console.log('‚ùå App.js non trouv√©');
}

// V√©rification de la route serveur
console.log('\nüîç V√©rification de la route serveur...');
const routePath = 'server/routes/friends.js';

if (fs.existsSync(routePath)) {
  console.log('‚úÖ Route serveur friends.js pr√©sente');
} else {
  console.log('‚ùå Route serveur friends.js manquante');
  
  // Cr√©er une route basique
  const basicRoute = `const express = require('express');
const router = express.Router();

// GET /api/friends - R√©cup√©rer la liste des amis
router.get('/', async (req, res) => {
  try {
    // Logique pour r√©cup√©rer les amis
    res.json({ friends: [] });
  } catch (error) {
    res.status(500).json({ error: 'Erreur serveur' });
  }
});

// POST /api/friends - Envoyer une demande d'ami
router.post('/request', async (req, res) => {
  try {
    // Logique pour envoyer une demande d'ami
    res.json({ message: 'Demande envoy√©e' });
  } catch (error) {
    res.status(500).json({ error: 'Erreur serveur' });
  }
});

module.exports = router;`;
  
  fs.writeFileSync(routePath, basicRoute);
  console.log('‚úÖ Route serveur friends.js cr√©√©e');
}

// Test final
console.log('\nüß™ Test final de v√©rification...');
const testScript = `
const fs = require('fs');

console.log('üéØ TEST FINAL - V√âRIFICATION RAPIDE');
console.log('====================================');

const files = [
  'client/src/pages/Friends/FriendsPage.js',
  'client/src/components/common/LazyLoader.js',
  'client/src/App.js',
  'server/routes/friends.js'
];

files.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(\`   \${exists ? '‚úÖ' : '‚ùå'} \${file}\`);
});

// V√©rifier les imports et exports
if (fs.existsSync('client/src/App.js')) {
  const appContent = fs.readFileSync('client/src/App.js', 'utf8');
  console.log(\`   \${appContent.includes('LazyFriendsPage') ? '‚úÖ' : '‚ùå'} Import LazyFriendsPage\`);
  console.log(\`   \${appContent.includes('path="friends"') ? '‚úÖ' : '‚ùå'} Route /friends\`);
}

if (fs.existsSync('client/src/components/common/LazyLoader.js')) {
  const lazyContent = fs.readFileSync('client/src/components/common/LazyLoader.js', 'utf8');
  console.log(\`   \${lazyContent.includes('export const LazyFriendsPage') ? '‚úÖ' : '‚ùå'} Export LazyFriendsPage\`);
}

console.log('\\nüéØ V√âRIFICATION TERMIN√âE');
`;

fs.writeFileSync('test-verification-finale.js', testScript);

console.log('\n‚úÖ CORRECTION FINALE TERMIN√âE');
console.log('===============================');
console.log('üí° Prochaines √©tapes:');
console.log('1. Red√©marrez le client: cd client && npm start');
console.log('2. Videz le cache du navigateur (Ctrl+F5)');
console.log('3. Testez la navigation vers /friends');
console.log('4. Ex√©cutez: node test-verification-finale.js pour v√©rifier'); 